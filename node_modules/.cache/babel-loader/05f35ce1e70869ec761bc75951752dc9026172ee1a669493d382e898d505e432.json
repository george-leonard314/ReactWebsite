{"ast":null,"code":"var _jsxFileName = \"/home/g/Documents/Assignments/Group Project/ALGIAInfrastructure/website/reactjswebsite/src/components/FilePreview.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FilePreview = ({\n  selectedFile\n}) => {\n  _s();\n  const [previewData, setPreviewData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    if (selectedFile) {\n      fetchPreviewData(selectedFile);\n    }\n  }, [selectedFile]);\n  const fetchPreviewData = async filename => {\n    setLoading(true);\n    try {\n      const response = await fetch(`/get-preview/${filename}`);\n      const data = await response.json();\n      setPreviewData(data);\n    } catch (error) {\n      console.error(\"Error fetching preview data:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"File Preview: \", selectedFile]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading preview...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this) : previewData.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: Object.keys(previewData[0]).map(header => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: header\n          }, header, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: previewData.map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: Object.values(row).map((value, idx) => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: value\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 19\n          }, this))\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No preview data available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(FilePreview, \"bL7RLb0B4NZgqdeRmQEyqQhemxI=\");\n_c = FilePreview;\nexport default FilePreview;\nvar _c;\n$RefreshReg$(_c, \"FilePreview\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","FilePreview","selectedFile","_s","previewData","setPreviewData","loading","setLoading","fetchPreviewData","filename","response","fetch","data","json","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","length","Object","keys","map","header","row","index","values","value","idx","_c","$RefreshReg$"],"sources":["/home/g/Documents/Assignments/Group Project/ALGIAInfrastructure/website/reactjswebsite/src/components/FilePreview.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst FilePreview = ({ selectedFile }) => {\n  const [previewData, setPreviewData] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    if (selectedFile) {\n      fetchPreviewData(selectedFile);\n    }\n  }, [selectedFile]);\n\n  const fetchPreviewData = async (filename) => {\n    setLoading(true);\n    try {\n      const response = await fetch(`/get-preview/${filename}`);\n      const data = await response.json();\n      setPreviewData(data);\n    } catch (error) {\n      console.error(\"Error fetching preview data:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div>\n      <h2>File Preview: {selectedFile}</h2>\n      {loading ? (\n        <p>Loading preview...</p>\n      ) : previewData.length > 0 ? (\n        <table>\n          <thead>\n            <tr>\n              {Object.keys(previewData[0]).map((header) => (\n                <th key={header}>{header}</th>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {previewData.map((row, index) => (\n              <tr key={index}>\n                {Object.values(row).map((value, idx) => (\n                  <td key={idx}>{value}</td>\n                ))}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      ) : (\n        <p>No preview data available.</p>\n      )}\n    </div>\n  );\n};\n\nexport default FilePreview;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}